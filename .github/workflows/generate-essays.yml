name: Generate English Essay Examples

on:
  # schedule:
  #   - cron: '0 0 * * *' # 每天午夜 UTC 时间运行
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  generate-essay-json:
    runs-on: ubuntu-latest
    steps:
      # 1. 检出代码
      - name: Checkout Repository
        uses: actions/checkout@v4

      # 2. 设置 Node.js 环境
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # 3. 安装 Gemini CLI
      - name: Install Gemini CLI
        run: npm install -g @google/gemini-cli

      # 4. 确保输出目录存在
      - name: Create output directory
        run: mkdir -p public/data

      # 5. 核心步骤：生成作文并保存为 JSON
      - name: Generate and save essay examples
        run: |
          # 在 gemini 命令前加上 echo "" | 来解决 "No input" 错误
          echo "" | gemini "请为我生成一个JSON文件内容，其中包含两个英语作文案例。这两个案例需要符合 PET (B1 Preliminary) 考试的写作要求，每篇作文大约100个单词。JSON的结构应该如下：根对象是一个包含'essays'键的数组，数组中的每个对象都应包含 'title' (作文题目), 'english_text' (英语原文), 和 'chinese_translation' (中文翻译) 这三个键。请确保只输出纯净、格式完全正确的JSON，不要包含任何额外的解释或markdown代码块标记。" > public/data/pet-essays.json
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}

      # 6. (可选) 验证生成的文件内容
      - name: Verify file content
        run: |
          echo "Verifying pet-essays.json content..."
          cat public/data/pet-essays.json

      # 7. 将新生成的文件提交到仓库
      - name: Commit and push the generated file
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "docs(content): 自动生成每日英语作文范文"
          file_pattern: "public/data/pet-essays.json"
          commit_user_name: "GitHub Actions Bot"
          commit_user_email: "github-actions-bot@users.noreply.github.com"